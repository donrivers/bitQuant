{"name":"bitQuant","tagline":"Solution for extracting and organizing Bitcoin trade data","body":"# bitQuant v0.3.1\r\n\r\nbitQuant is a lightweight tool for extracting and organizing Bitcoin trade data provided by exchange APIs. bitQuant is designed to standardize data from many supported exchanges and store data in either temporary **pandas** DataFrames or permanent **SQL** tables. bitQuant performs all actions using three class objects which are efficent and easy to use and are ideal for data needs of both the hobbyist and professional.\r\n\r\n## Features\r\n\r\n### API Class\r\n- Request trade data from exchange REST API\r\n- Return trade data as DataFrame\r\n- Automatically limit rate on **ALL** requests\r\n- Use `auto_since` feature to automatically minimize size of data requests (_currently broken_)\r\n\r\n### SQL Class\r\n- Automatically create SQL tables for trade and price data\r\n- **Insert** or **select** data from SQL database using single command\r\n\r\n### Data Class\r\n- Combines API and SQL classes for easily extract and process data\r\n- Convert trade history data to OLHCV price data\r\n- Embedded DataFrames store duplicate-free trade and price data\r\n- Use `run_loop` function to continuously perform trade data requests on multiple exchanges\r\n\r\n### Supported Exchanges\r\n\r\n- bitfinex\r\n- bitstamp\r\n- coinbase\r\n- btce\r\n- okcoin\r\n- btcchina\r\n\r\n### Supported SQL Types\r\n- sqlite\r\n- MySQL\r\n\r\n## Planned Features\r\n- Expand API data requests to support ticker, orderbook, and lendbook data\r\n- Add data remediation feature to fill in trade history holes using `since` API parameter\r\n- Portfilo related API POST requests to perform trades, post orders, and access account information\r\n- WebSocket API support to live steam data\r\n- Support for OKCoin futures markets\r\n\r\n## [Documentation](https://github.com/rosspalmer/bitQuant/wiki)\r\n\r\n## Installation and Setup Guide\r\n\r\nInstall bitQuant using source distribution from GitHub.\r\n\r\n    git clone https://github.com/rosspalmer/bitQuant.git\r\n    cd bitQuant\r\n    python setup.py install\r\n\r\nNavigate to the folder location in which you would like to keep your **login text file** and **sqlite** database (if applicable). You will need to navigate to this location to access the **login text file** in the future.\r\n\r\nRun `setup_sql` command to setup up SQL database and tables.\r\n\r\n    >> import bitquant as bq\r\n    >> bq.setup_sql()\r\n\r\n    -----SQL Database setup-----\r\n\r\n    =Select SQL type=\r\n      (1) sqlite\r\n      (2) MySQL\r\n\r\nSelect the SQL type and input the relevant login information.\r\n\r\n## License\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2014-2015 Ross Palmer\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}